<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>simonvik on Blog</title><link>https://blog.xil.se/author/simonvik/</link><description>Recent content in simonvik on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 21 Feb 2016 20:00:12 +0100</lastBuildDate><atom:link href="https://blog.xil.se/author/simonvik/index.xml" rel="self" type="application/rss+xml"/><item><title>InternetWache 2016 404 Flag not found (misc 80)</title><link>https://blog.xil.se/posts/internetwache-2016-misc-80-simonvik/</link><pubDate>Sun, 21 Feb 2016 20:00:12 +0100</pubDate><guid>https://blog.xil.se/posts/internetwache-2016-misc-80-simonvik/</guid><description>Problem Description: I tried to download the flag, but somehow received only 404 errors :( Hint: The last step is to look for flag pattern.
(misc80, solved by 292)
Attachment: misc80.zip
Solution We are provided with a pcapng file, after opening the file in wireshark we can see that it contains some HTTP Requests (without answers) and some DNS lookups.
After looking at it for a while we noticed that the hostnames looked interesting, the first part of the hostname looked like hex-encoded ascii.</description></item><item><title>InternetWache 2016 Mess of Hash (Web 50)</title><link>https://blog.xil.se/posts/internetwache-2016-web-50-simonvik/</link><pubDate>Sun, 21 Feb 2016 20:00:12 +0100</pubDate><guid>https://blog.xil.se/posts/internetwache-2016-web-50-simonvik/</guid><description>Problem Description: Students have developed a new admin login technique. I doubt that it&amp;rsquo;s secure, but the hash isn&amp;rsquo;t crackable. I don&amp;rsquo;t know where the problem is&amp;hellip;
(web50, solved by 170)
Attachment: web50.zip
Service: https://mess-of-hash.ctf.internetwache.org/
Solution We unpack the attachment and get a README.txt containing:
&amp;lt;?php $admin_user = &amp;#34;pr0_adm1n&amp;#34;; $admin_pw = clean_hash(&amp;#34;0e408306536730731920197920342119&amp;#34;); function clean_hash($hash) { return preg_replace(&amp;#34;/[^0-9a-f]/&amp;#34;,&amp;#34;&amp;#34;,$hash); } function myhash($str) { return clean_hash(md5(md5($str) . &amp;#34;SALT&amp;#34;)); } We can directly see that the hash assigned to $admin_pw looks interesting.</description></item></channel></rss>